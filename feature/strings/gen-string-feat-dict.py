import sys
import bz2
import pickle

#sd={'DecodePointer':0, 'GAIsProcessorFeaturePresent':0, '- floating point support not loaded':0, 'FlsFree':0, '</trustInfo>':0, '</dependentAssembly>':0, 'CRYPT32.dll':0, 'CreateTraceInstanceId':0, 'QueryTraceW':0}
#sd={'DecodePointer':0, 'GAIsProcessorFeaturePresent':0, '- floating point support not loaded':0, 'FlsFree':0, '</trustInfo>':0, '</dependentAssembly>':0, 'CRYPT32.dll':0, 'CreateTraceInstanceId':0, 'QueryTraceW':0, 'GDI32.dll':0, 'LoadMenuW':0, 'CharToOemA':0, 'GetIconInfo':0, '__dllonexit':0, 'OemToCharW':0, 'GetClassInfoExA':0, 'IsValidLocale':0}
sd={}

#1: '__dllonexit'
#2: 'DecodePointer', 'GAIsProcessorFeaturePresent', '- floating point support not loaded', 'FlsFree', 
#3: 'GetIconInfo', 
#4: 'OemToCharW', 
#5: 'LoadMenuW', 
#6: 'CharToOemA', 
#7: 'GetClassInfoExA'
#8: '</trustInfo>', '</dependentAssembly>', 'CRYPT32.dll', 'CreateTraceInstanceId', 'QueryTraceW', 'GDI32.dll', 
#9: 'IsValidLocale'
with bz2.BZ2File(sys.argv[1]) as mf:
	for l in mf:
		ll=l.strip().split(' ', 4)
		if float(ll[3])>0.5: sd[ll[4]]=0
#print len(sd)
#for d in sd: print d
pf=open('string-dict.pkl','w')
s = pickle.dump(sd, pf)
pf.close()

#for l in sys.stdin.readlines():
#	ll=l.strip()
#	if ll not in sd: continue
#	sd[ll]=1
#print sys.argv[1], ','.join([str(sd[k]) for k in sd])
